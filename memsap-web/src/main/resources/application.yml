spring:
  application:
    name: memsap-web
  mvc:
    servlet:
      load-on-startup: 1
    date-format: yyyy-MM-dd HH:mm:ss # 配置请求的String类型转Date类型 FIXME 定义默认的时间转换格式
    favicon:
      enabled: false
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss #配置Date类型返回时的时间格式，否则会返回long FIXME 定义默认的时间返回格式
    time-zone: GMT+8 #设置Date类型的时区
  # 文件上传配置
  servlet:
    multipart:
      enabled: true   # 启用http上传处理
      max-file-size: 100MB # 设置单个文件的最大长度
      max-request-size: 100MB # 设置最大的请求文件的大小
      file-size-threshold: 10MB  # 当上传文件达到1MB的时候进行磁盘写入
      location: C:/We/We/memsap/memsap-web/src/main/resources/static/img/Phone_img/  # 上传的临时目录
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    encoding: UTF-8
    mode: HTML
    cache: false
    servlet:
      content-type: text/html
#  redis:
#    timeout: 1000
#    jedis:
#      pool:
#        max-active: 20
#        max-idle: 8
#        min-idle: 0
  mail:
    host: smtp.qq.com
    username: 1149650559@qq.com
    password: jmafjlytihxsgdfi
    from: ${spring.mail.username}
server:
  port: 8084
  servlet:
    context-path: /${spring.application.name}


feign:
  hystrix:
    enabled: false #启用断路器
  compression:
    request:
      enabled: true # gzip压缩
    response:
      enabled: true # gizp压缩
  client:
    config:
      default:  #服务名，填写default为所有服务
        connectTimeout: 50000
        readTimeout: 50000
#        loggerLevel: full
#        errorDecoder: com.example.SimpleErrorDecoder
#        retryer: com.example.SimpleRetryer
#        requestInterceptors:
#          - com.example.FooRequestInterceptor
#          - com.example.BarRequestInterceptor
#        decode404: false
#        encoder: com.example.SimpleEncoder
#        decoder: com.example.SimpleDecoder
#        contract: com.example.SimpleContract

# 设置；链接超时时长为5秒，超出5秒，熔断器生效，配合ribbon使用
hystrix:
  threadpool:
    default:
      coreSize: 1000 #并发执行的最大线程数，默认10
      maxQueueSize: 1000 #BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 160000 #断路器的触发时间 要大于(ribbon.ReadTimeout+ribbon.ConnectTimeout)*(ribbon.MaxAutoRetries+1)*(ribbion.MaxAutoRetriesNextServer+1)

# FIXME  设置服务负载请求超时时长(根据业务需求设置时间长度)，以及重新请求间隔
ribbon:
  ReadTimeout: 3000
  ConnectTimeout: 3000
  MaxAutoRetries: 1 # 当前重试次数，这里配置1，就是重试1次，总共2此
  MaxAutoRetriesNextServer: 1 #
  OkToRetryOnAllOperations: false

######################## eureka配置 ############################
eureka:
  healthcheck:
    enabled: true
  client:
    serviceUrl:
      defaultZone: http://localhost:8081/eureka
  instance:
    prefer-ip-address: true
    instance-id: localhost:${server.port}${server.servlet.context-path} #设置自己的实例ID，这样在eureka注册中心里显示的就是ip:port
    leaseRenewalIntervalInSeconds: 30
    leaseExpirationDurationInSeconds: 60

administrator:
  name: root
  password: 123456